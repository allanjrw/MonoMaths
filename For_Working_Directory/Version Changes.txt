MONOMATHS VERSION CHANGES
(Minor bug fixes - e.g. affecting speed but not accuracy of results - are not included.)

0.60.00   (11 May 11)
Function 'addin' removed. ('addin(arr, x, y)' had the same effect as 'fill(..)', but added the new data to existing data. Never used, and same effect is easily achieved with simple coding.)
Function 'append' removed. (Duplicated the work of 'data(.)' with no extra advantages.)
Function 'arrange' renamed to 'reorder' (diffuse name --> more accurately descriptive name).
Functions 'replace', 'replaceto', 'insert', 'delete', 'deleteto' rewritten, with new argument order (except for the last two) and with different handling of out-of-range arguments.

0.61.00   (18 May 11) *** MAJOR REVISION
Disk I/O functions: all loading and saving functions completely rewritten.Even where the new function reproduces an old name, the action is different and the layout of arguments is different.
* Old functions 'load', 'loadstream', 'loadtext' replaced by new functions 'load', 'loadfmt', 'loadtext', with different arguments deployment and error-handling.
* Old functions 'save', 'savestream', 'savetext' replaced by new functions 'save', 'savefmt', 'savetext', with different arguments deployment and error-handling.
Disk I/O error detection functions: Completely different.
* Functions 'loaded' and 'loadmsg' have gone.
* Functions 'iok' (boolean) and 'iomessage' are new, and handle error (and other) messages for the new disk I/O functions.

0.61.01   (27 May 11)
Added function 'interpolate', but so far incomplete - only handles 2 reference points (linear interpolation) or 3 (quadratic interpolation).
Function 'save':  extra argument added (the description to be saved in the prefix, if a prefix is to be generated).

0.61.02 (28 May 11)
The method 'Oops(.)' was added to class F to more efficiently handle errors raised by functions. In the process, some of the error messages were improved.
Function 'overlay' had code '&' (overwrite if nonzero) added to its range of operations.

0.61.03 (31 May 11)
The facility of Break Points was added.
Optional array argument added to function 'iomessage' for use after successful loading of a data file with a descriptive prefix.
Two menu items added: (1) Direct cursor to a particular line;  (2) Show in the status bar which line contains the cursor.

0.61.04 (4 June 11)
Function 'overlay' extended to also handle matrix-vector operations, and to replace the recently-added '&' operator with three new operators,
 each beginning with '&';  addition of further operators '>' and '<'.
Context menu: add search for possible variable and function names, as would be present in a program not yet run, or edited with new names since the last run.
Correction to the above new menu items (0.61.03): the second toggles continual display of the current line number in the label above the Assignments Window.
Function 'palette' extended to include a two-argument version using a user-defined palette.
Colours for "Search | Colour-Match of Braces/Brackets" changed a little for easier distinction of levels.
Break Points colouring system improved - currently active breakpoint distinguished from inactive breakpoints; other minor improvements.

0.61.05 (13 June 11)
Graph menu for 2D now has options for zooming in/out  just in the horizontal or vertical direction.
The long overdue system for warning re overwriting unsaved data was instituted.
Colour Selector added to the 'Other' menu.
Navigation forwards / backwards added to the 'Search' menu.
'Stats' button added to the F1 display for array values.
'Search | Go To First Occurrence' menu item added.
Help menu item "Main Menu Items" brought up to date.
Adjustments to Edit | Undo and Edit | Redo menu items for better performance.
Allow for '\n' and '\t' in  the text boxes invoked by 'Search | Find' and 'Search | Replace '.
Add menu items "View - Change Appearance - Colours" and "View - Change Appearance - Fonts".

0.61.06 (23 June 11)
INI file reorganized (changes in order of parameters, a couple of names, and addition of a few extra parameters).
Major redistribution of submenus between main menu items; addition of one new main menu item, rewording of some main and sub menus.
Added new function 'consult(.)'

0.61.07 (1 July 11)
Improvement to function which warns of data loss; extension of its use to include corner-icon closure of main window.

0.61.08 (6 July 11)
Function 'graphcopy(.)' added.
File | Save Array or System List -- reorganized display and format of saved file.
Array display on pressing F1 - column numbers added at the top, where the delimiter is a tab, and col. nos. have not been set to precede every value.
Breakpoints are now not eliminated by keying ESC, but are eliminated by Cntrl-ESC. (In  both cases, all other temporary tags are eliminated.)
New menu item 'Run | Remove All Break Points'  which does so while not affecting other temporary tags.
Method handling recolouring of assignments text revamped, together with all calls to it.
New menu item 'Run | Abort Run' added, with hot key cntrl-F5. Does the same as the 'ABORT' button, but found necessary when a runaway program
	was covering the screen with rapidly proliferating graphs, which were also blocking out all else on the task bar; this left no way for closing down
	the program than crashing Linux.

0.62.00 (14 July 11)
Empty arrays still have length 1 but now hold value NaN instead of 0.
Function 'empty()' has been replaced by 'empty(Arr)', returning TRUE if array Arr has length 1 and value NaN (even if length and value forced by e.g. "Arr = data(NaN)").
Function 'isnan(.)' added. Alternative spelling 'NaN' of the constant 'NAN' now allowed.
Function 'cullbykey(.)' lost its 3rd. argument.

0.63.00 (16 July 11)
MAJOR BUG FIX -- At the end of a function's run, REF array StoreItem objects were not being properly handled; the result did not impinge on calculation results - 
	all computation would have been correct - but memory was being clogged up with rejected but unremovable StoreItems with their data strips. This came to light
	in a large loop handling large arrays, which mysteriously slowed to a snail pace. It turned out that if a function with REF arguments was in a loop, then for each REF argument 
	there were 2(N - 1) such 'dead' data-filled StoreItems. Moreover, the 'live' StoreItem handed back to the calling code, while numerically correct, had as its client field
	reference the address of the in-function alias rather than that of the original calling code's variable. (Mercifully the client field is not used in calculations, so no
	computational harm was done. The only effect noted was that the menu item 'Technical | Internal Data' caused a MonoMaths crash, as that item certainly does handle
	client fields, which - invoked with focus out of the function - would point to a nonexistent variable.) 

0.63.01 (19 July 11)
Display of system lists using the F1 key was instituted, by virtue of which a system list is first converted (temporarily) into a list array and then hooks into the F1 array
	display system. Menu item "Show | System List Contents" now also hooks into the same display system.
Function 'substitute(.)' expanded to include replacing an array segment by another array segment. At the same time, scalar target (first argument) is no longer allowed.
	(Scalar argument not used in extant programs, so I have not updated the version number to 0.64.)

0.63.02 (22 July 11)
Function 'hsl_to_rgb(.)' adjusted to take an array of colours, and also given optional extra arguments to allow the return to be either values or a string.

0.63.03 (29 July 11)
Minor bug fix - MonoMaths would crash if one tried to run code with user functions defined but no main program present. Now it gives an error message instead.

0.63.04 (3 August 11)
Extension of the bookmark system using "/ * n * /"  to include n = 0 (previously 1 <= n <= 9).
Menu item "Search | Go To First Occurrence" (see 0.61.05) replaced by "Search | Go To Nth. Occurrence", with associated hot keys Cntrl-0 to Cntrl-9;  searches now for the
	Nth. occurrence of the identifier at the cursor if N = 1 to 9, and returns to the original cursor position if N = 0.
Menu item "Search | Go To Screen Position before Last Run" added.
F1 array display: (a) 'Max/Min' button removed; instead, Max and Min are always part of the header.  (b) 'Captured' no longer produces a message box, but now adds 
	the message "**captured**" to the header of the display.

0.64.00 (7 August 11)
Major trap removed. Up till now, e.g. "Arr[1][]" and "Arr[1][-n]" were equivalent, where "-n" is any negative value. Importantly, the first was internally converted to "Arr[1][-1]".
Now "[]" is the only way to specify a full dimensional range; any negative index will raise an error. In the process '__assign(.)' and '__segmt(.)' code was improved.

0.64.01 (23 August 11)
Better system to serve 'Show | Unused Variables'. Involves adding a new field 'Accessed' to class TVar.

0.64.02 (31 Aug 11)
New system function 'evaluate(.)'. New system function 'iofile(.)'.
15% to 20% speedup of MonoMaths  by using alias pointers in R.RunAssignment(.).

0.64.03 (21 Sep 11)
New system function 'ladderclr(.)'.

0.65.00 (23 Sep 11)
Address-conversion function 'locn(.)' removed, and replaced by 'address(.)', which converts addresses in both directions.
New function 'structure(.)' added, so that a structure can be created using dimensions expressed as an array (not possible with 'dim(.)').
In the process, method V.GenerateTempStoreRoom(.) was amended for better error detection.

0.65.01 (30 Sep 11)
Use of chain assignments like "a = b = c = 10;" now allowed. In the process of recoding, it was necessary to change the internal assignments repository, "R.Assts",
from a jagged matrix to a list of TTerm arrays (one per assignment). Although not  done to improve timing, tests suggested that it shaved a little time off the run (a couple of percent).

0.65.02 (5 Oct 11)
Reworked the graph menu "Scaling" to work properly for 3D graphs (it had omitted Z-axis adjustment), and also added submenus to it for3D graphs: "New Aspect" and "Original Aspect".

0.65.03 (15 Oct 11)
No programmatic change; simply the program was compiled under a later version of MonoDevelop (2.10) which required  its RunTime version of .NET to be 4.0 (as MonoDevelop 2.10 has changed its internal compiler, and the new one does not handle earlier versions of .NET). This means probably that I will have to maintain a MonoDevelop 2.6 somewhere in an old Linux compartment so that I can compile for other machines which do not have .NET 4.0.

0.65.04 (25 Oct 11)
New function 'boardplacemt(.)' added;  existing function 'placeboard(..)' altered by allowing the 4 values after the graph ID to be any array / scalar mix, and by having a boolean return.

0.66.00 (27 Oct 11)
'header' and 'footer' rewritten to always return the set text, and in particular when the only argument is the graph ID, or - for footer - graphID followed by boolean. Prior programs should all work normally, as they all act as if these were void functions (which they used to be) and so ignore the return. The only exception would be in the highly unlikely event of a footer consisting of a single letter, that being as a scalar: 'footer(G, 65)'; that 2nd. arg. would now be interpreted not as the letter 'A' but as the boolean 'true'.
Starting orientation of 3D graph readjusted so that small-movement adjustments of orientation by menu / hotkey pass the graph through exact multiples of right angles.

0.66.01 (10 Nov 11)
'loadtext' used to trim initial blanks off lines; this has been stopped as an unacceptable intrusion into the user's intentions.
'split' now offers the option of accepting empty subarrays (with the given or default padding character); the default remains that it ignores them.

0.66.02 (17 Dec 11)
Finding of the Nth. occurrence of the word currently at the cursor in Assignments Window text has now been augmented to include the 10th. to the 19th. occurrence, with hotkey press Ctrl-Alt-(N-10) for occurrences N = 10 to 19..

0.66.03 (18 Dec 11)
Function 'pixels' extended to allow also for an array argument, in which case screen dimensions are returned.

0.66.04 (22 Dec 11)
Repair of the handling of recursion with REF array arguments. Was giving the right numerical answers, but the client fields of the array were left pointing to the function's alias after all recursion finished.

0.66.05 (30 Dec 11)
Adjustments to methods MainWindow.PrefixSelectedLines(.) and MainWindow.UnPrefixSelectedLines(.) so that remarking-out and unremarking of an UNselected line occurs with the menu options 'Appearance | Remark-Out Selected Lines' and '..Undo Remark-Out..', as well as with selected lines (as previously).
System function 'import array' adjusted such that if an array of that name has already been assigned in earlier code in the same function, or as an argument of the function, then an error is raised. (Previously either not recognized, or - in the case of a REF argument - crashed MonoMaths.)
Function "window(.)" added.

0.66.06 (2 Jan 12)
Function "statusbar(.)" now allows for Pango text tags. Also, information about Pango text tags is now appended to the 'format' section of "Hints.txt". Also, 'File ? Open' was barred from loading a file while a program was running (error message points out that option 'Load Function' will do so instead).
Function "run(.)" had mode option "FQ" added in.
Function "list_find(.)" updated to allow search for a sequence.
Functions "jag(.)" and "unjag(.)" were corrected to allow any fillers, in particular to stop disallowing negative fillers.

0.66.07 (17 Jan 12)
Function 'removedups(.)' extended to remove duplicate rows or columns from a matrix.
Error detection provided for a call to a user function which offers more arguments than the function can take; before the revision, MonoMaths would just crash.
Array display box (evoked by F1 with cursor on array name) now allows settings to be preserved during the rest of the one run, via the 'Help' button's message box.
This display box can now also be evoked by a right-click (with cursor on name). Also, its focus now starts on the 'Close' button, so that the Enter key closes it.

0.66.08 (27 Jan 12)
Internal changes (JMaths.cs method 'JM.Shuffle(.)' improved; code for fn. 'shufflemx(.)' improved accordingly.
Function 'rand(.)' now has a 3rd. argument where an array of values is required; it prohibits duplicated values (if 'true') in the case where integer random values are returned.
Function 'split(.)' now has an optional 5th. argument, to allow fixed length with either amputation or padding of rows.
Functions 'smash(.)' and 'here()' added.
Menu item 'Run | Show Sequence of Function Calls' added.
Menu item 'Display Nos. (non-editable mode)' added.

0.66.09 (1 Mar 12)
Function 'split(.)' now has optional 6th and 7th. arguments, for adding a prefix and/or suffix to each substring.
Function 'findbrackets(.)' added.
Function 'footer(.)' now allows for setting of visibility of the cursor.

0.66.10 (9 Mar 12)
Function 'exec(.)' rewritten internally, and given a final optional scalar argument specifying waiting time.

0.66.11 (10 Mar 12)
Function 'arctan(.)' now takes an optional second argument, so that the arctan of (delta Y / delta X) returns an angle in the correct quadrant.

0.67.00 (16 Mar 12) *** MAJOR REVISION
Loading and saving functions rewritten; all programs written in MonoMaths 0.66 or earlier which use such I/O functions will now fail.
All loading functions of the old version (load, loadtext, loadfmt, save, savetext, savefmt) have been replaced by just two functions - load, save -
of which the first argument distinguishes between functions previously shared out to these 6 functions. In addition, the facility to save a byte array
has been added, and the facility to use 'load('D'..) just to find a directory name from a file dialog without loading any files.
Other arguments were unaltered, except that the order of the last two arguments that were previously part of 'savefmt' is now reversed.
There are no changes to returned values, or to the iomessage and iok error-handling system, and to iofile. The reason older programs will not
work is purely in change of function names and rearranging of arguments.
Old function 'between(.)' has been renamed 'span(.)', collecting the span between two bookmarks.
New function called 'between(.)' created, which copies text between pointers EXclusive.
New function 'chooseclr(.)' added, which displays a colour dialog.
Much internal rewriting and crash-proofing of methods that convert double and integer values and arrays to characters; should not affect
operation of any existing MonoMaths code.

0.67.01 (3 Apr 12)
Function 'randum' added to acquire random bytes directly from the Linux kernel via pseudofile "/dev/urandom".

0.67.02 (2 May 12)
Functions 'plot', 'plot3d', 'plotmesh'. 'plotmesh3d' - arguments PtShape and LnShape now can be scalar, i.e. unicode values for allowed characters.

0.67.03 (26 May 12)
Maximum number of submenus for the user-generated main menu item (using fn. 'xmenu') increased from 10 to 20.

0.67.04 (27 Jun 12)
Function 'window_find' added. Also, main window's 'GO()' method adjusted such that the Assignments Window is always focussed after a run, with cursor position as before the run (or as set by a function which operates on Assignments Window text).

0.67.05 (24 Jul 12)
Function 'overlay' now allows for different operations to be performed on different elements in the one call (in the case of operations between two list arrays only).
Also, operations "&over", "&under" and "&both" have been replaced by single characters 'o', 'u', 'b' (though the old forms are still allowed, for heritage code.)

0.67.06 (4 Sep 12)
Function 'substitute' now allows substitution of value NAN by a scalar.

0.68.00 (6 Sep 12)
Function 'statusbar' removed, replaced by 'label', which accesses all three labels. Upper labels always reset when program ends; all three when new program starts.
Function 'acquire' no longer trims data entered, if the corresponding variable is a chars. array.

0.68.01 (10 Sep 12)
Function 'expunge' added.

0.69.00 (19 Sep 12)
Function 'here' renamed to 'thislineno', and function 'evaluate' renamed to 'stringtovalue'.
Menu item "Help | Functions by Category" added.
'valuetostring' is now an alternative name for 'str'.

0.69.01 (22 Sep 12)
Function 'str' ( = 'valuetostring') given a 2nd. argument, a format specifier.
LblComments widened from 221 to 270 pixels, which by trial and error fits best without e.g. encroaching on left border of window.

0.69.02 (26 Sep 12)
Function 'plu' added.

0.69.03 (30 Sep 12)
'Reload' menu now shows underscores in file names (using a surrogate character; menu labels won't show a real underscore).
Function 'clipboard' added.

0.69.04 (4 Oct 12)
Function 'checkdirectory' gets extra argument, and standard directory name abbreviations allowed.
Function 'choosefilename' allows same abbreviations; now strips supplied directory name back to last '/'.

0.69.05 (7 Oct 12)
Menu item 'Edit | Special Characters' added, along with hot keys cntrl-shift-G (change letter to left to Greek) and cntrl-shift-H (to Maths symbol).

0.69.06 (13 Oct 12)
Function 'distance' now allows for array as first argument and matrix (same column length) as second arg, returning an array of distances.
Function 'programfile' added.

0.69.07 (19 Oct 12)
Function 'starttimer' now takes multiple timer identifiers as arguments.
There are now 20 timers available for use. One other change: if 'starttimer' has not been called on timer n, then 'timer(n)' will return msecs. since 1AD.
Two special codes are now available to 'timer': 'timer(-1)' returns time since user program started, 'timer(-2)' since MonoMaths instance started.

0.70.00 (22 Oct 12)
Function 'touch_array' added. Function 'lookup' rewritten, slightly different argument handling, but should not affect any prior code
(if any such code exists with this rarely used function).
User functions with no args.: fixed a bug whereby a call "Foo()" to "function Foo()" raised an objection - too many arguments.
In the process, (a) it is no longer allowable to write "Foo(0)" or "Foo(void)" in the definition of the function; and (b) fn. arg. separators can no longer be ';'.
Code for 'div', 'mod', 'even' altered to allow for integer arguments longer than Int32, by using Int64 in internal handling. (Too bad if they're longer than Int64.)
Menu item Appearance | ... Fonts now allows display of all available fonts. In the process, F.RunProcess(.) was moved out of class F to become JS.RunProcess(.).
Search, Replace dialog boxes - add message that '\n' and '\t' allowed.

0.70.01 (3 Nov 12)
Function 'exec' - argument order changed for running a new instance of MonoMaths; but the old order still works, for compatibility with many programs that used it.
Function 'cmdline' added. [Removed and replaced later - see 0.93.00]
Function 'captured()': After its use, call to 'iomessage(.)' gives previous array name and/or time of saving, exactly as after successful "load('A', ..)".

0.70.02 (11 Nov 12)
Function 'reposition' added, to resize / reposition the whole MonoMaths window.
Function 'repartition' added, to change the heights of Assignments and Results window without affecting MonoMaths window size or layout.
Function 'jag' no longer needs a 4th. dummy 'RowNo' argument in the case of appending (Operation 'A').

0.71.00 (1 Dec 12)
Functions 'deleterows' and 'deletecols' now have a second form, in which an array states particular rows / columns to be removed. Silly arguments
produce slightly different results to what they would do in the past. I would think that no code needs to be rewritten, as I don't use silly arguments.

0.71.01 (4 Dec 12)
Efficiency of handling quotations greatly improved by dedicating a List<string>, 'P.Quotation', to hold the quotes, and system fn "__quote(.)" to retrieve them.
The only difference to the programmer would be that the program no longer objects if 256+ chars. are added in one literal quote.
The menu item "Technical | Internal Data" displays the contents of P.Quotation at the end.
Function 'stringtovalue' now can decode the string form of an array, as well as of a scalar.

0.72.00 (7 Dec 12)
Removal of function 'acquire' and replacement by much more user-friendly fn. 'request'. Definitely affects preexisting code! Every attempt made to alter legacy programs.
Function 'unjag' now accepts a list array, which it treats as if it were a jagged matrix with one row.
Functions 'blockfile', 'btnrelease', 'cursordata' and 'persistent_array' added.
Function 'window' gets extra action 'M' for changing markup tag recognition status.

0.73.00 (15 Dec 12)
The cue to ignore following program text was changed from 'CUT!' to just 'CUT'. Also, if the next line begins with "====", the Results Window message about the cut is suppressed.
Also there is now a version of block remarking which does not affect text colouring, but still keeps the block from being parsed: "/*\ ... the block .... \*/".
Function 'lettercase' added.
Function 'blockfile' given optional 3rd. argument (user-generated message for dialog box).
Function 'bracketlevel' added.
Function 'polystring' updated to current format tagging system.

0.73.01 (8 Jan 13)
Pnemonic handling updated to handle the case where a selection exists when cntrl-N is keyed.
Formatting: You can now specify a bulletting indent - "<bullet 50>" - so that e.g. nested levels of bulletting are possible; and even "<bullet 50, #>" (for in this case, a bullet '#').

0.73.02 (18 Jan 13)
Function 'exit_new()' added. Also, clicking on "File | New" now also closes down any graphs left by the last run.
Switch to formatted-tag view now keeps the focal point nearer the centre (it used to go down to the bottom line of the screen), and switches formatted <--> unformatted view no longer fire the UnsavedData flag.

0.73.03 (3 Feb 13)
Function 'insert_image(.)' added.

0.74.00 (8 Feb 13)
Function 'split' rewritten to make no use at all of C# string-handling methods, and so now is no longer tied to unicode values. Arguments are slightly different; the only problem an old program might encounter is that if Padder is an array, its whole extent is used to pad, whereas formerly only its first character was used for padding.
Function 'window' now allows a scalar argument for 'Where', and also has an extra action, 'D'(elete).

0.75.00 (11 Feb 13)
Function 'span' rewritten; deployment of arguments as before, but the actual handling of the arguments and the returns of the function are changed and would probably lead to trouble with all earlier programs using 'span' - I shall attempt to track them all down and alter them. [Was done.]
Menu item 'Search | Which Occurrence of Word' added.
Menu facility 'Show | Unused Variables' made to function properly.
Menu item 'Help | Formatting with Text Tags' was added (simply displaying what was already in 'Hints.txt').
Conditionals can now compare an array and a scalar, provided the array has length 1.

0.76.00 (18 Feb 13)
Function 'rgb' rewritten to eliminate the annoying first 'success' element of the returned array. Definitely would misfunction with all prior usages, which as possible will be altered. [All extant programs altered.]
Function 'moveshape' rewritten internally to allow for different deployments of the graph ID. No extant program would be affected.
Function 'graphresize' now takes an array / scalar mix of two values, not just two scalars.
Function 'val' added, as simply an alias of 'stringtovalue' (as 'str' is an alias of 'valuetostring').
Menu item "Show | List All Functions" added.
Menu item "Show | Function Arguments" now looks back 500 characters; also, when searching for the opener '(' for the function, it hops over all nested '(..)' segments in between.
Menu item "Search | Go to this function's declaration" added.

0.76.01 (4 Mar 13)
Function 'request' tampered with - it is possible now to condense label-boxtext pairs into a single pair using delimiters, so that the number of labels and text boxes can be set at run time.
Menu item "Search | Remove All Bookmarks" added.
Fault with error detection for 'if' dealt with: it had failed to detect duplication of 'else' ("if ... else ... else").

0.77.00 (20 Mar 13)
Function 'exit_new' replaced by 'exit_plus', which also allows for loading a file after exit, optionally displaying it in formatted mode.
Menu item "Show | List All Functions" now moves focus to a function highlighted in the dialog box.
Empty braces are now allowed (provided they are not orphaned); they are filled internally by a dummy assignment, to keep parsing and the flow line happy.
Functions 'chars' and 'unchars' now take multiple arguments, and also don't crash if scalars are included (but simply ignore them).
New menu item "Search | List all finds, move to any".

0.77.01 (13 Apr 13)
Functions 'randrange' and 'fixangle' added.

0.77.02 (19 Apr 13)
Functions 'distmutual', 'distpoints', 'setalias', 'getval', 'setval', and 'prevalence'  added.

0.77.03 (25 Apr 13) *** MAJOR REVISION
Unicodes beyond 127 now allowed as identifier characters, if program's first data line starts with 'ALLOW' + proposed unicodes.
Directive CONSTANT added, for defining user constants.
Structures may now only have up to 3 dimensions. Array handling functions "__segmt" and "__assign" were rewritten accordingly, and as a result became faster; in the case of e.g. "Arr[0][][]", there was a massive speed increase.
Function 'filter' added (making use of the above changes).

0.78.00 (3 May 13) *** BASIC OPERATION CHANGE
With C# (and probably other C-type languages) "a *= b + c" is equivalent to "a = a * (b + c)"; in MonoMaths it was equivalent to "a = a * b + c". (This was not an error; it was noted in the old Help file under 'Syntax'.) This has been changed to conform to the C# model.
Function 'pointsof' added; function 'prevalence' given a second mode.  Function 'cluster' added.
New mode added for function 'substitute', the 2-argument version that uses a substitution table.
C# method JD.InputBox(.) now allows for responses to ENTER keyed in dialog text boxes; this has been carried across to MonoMaths function 'request', and to menu items Search | Find and Search | Replace.

0.78.01 (29 May 13)
Functions 'centre' and 'graphvisible' added.
Menu item "Show | List All Functions" now appends the number of function calls to the function declaration in the display box.
Function 'triage' extended to allow array test values.

0.78.02 (31 Aug 13)
The menu options "Show|Function Args..." and "Show|Function Code..." now work for non-MonoMaths function / method declarations of C-like type: those introduced by 'public' or 'private' or 'protected'.

0.78.03 (9 Sep 13)
Function 'cursorposn' added.

0.78.04 (14 Sep 13)
Function 'blockfile' can now block a file name (no path) or partial file path + file name from being saved anywhere.
Function 'label' includes an option to set the main window's title (until the next file I/O operation overwrites it).

0.78.05 (10 Nov 13)
The pnemonics parser had to be tweaked to allow pnemonics to inserting a superscript formatting sign. Help file adjusted accordingly.
Function evalpoly(.) for complex cases was returning a 2xN matrix instead of an Nx2 matrix; this was corrected.

079.00 (19 Nov 13)
Division by zero no longer raises an error; the underlying Mono returns ± infinity for this - no error raised - and this result is now accepted by MonoMaths.
INI file: When it is being saved "~/" replaces the home path for all files using it. When loaded, all "~/" are reconverted to the home path. This allows the INI file to be ported from computer to computer without having to edit all references to the home path by hand.
MainWindows instance method ColourBrackets(.) changed to iterate with a Gtk.TextIter rather than just through BuffAss.Text as a chars. array; this overcame the problem of offsetting of marks where earlier text contained very large index UTF8 chars.

0.80.00 (6 Jan 14)
Functions 'merge' and 'unmerge' have been rewritten, with some differences that could trouble earlier uses.

0.81.00 (26 Jan 14)
Function 'ones(.)' deleted (was never used, being both complicated and superfluous).
Function 'mxhalf(.)' added.

0.82.00 (11 Feb 14)
The ALLOW directive must now precede the CONSTANT directive. (This was done because the ALLOW directive is handled separately by code completion, which has to know what special characters are allowed, even before the program has ever been run.)

0.82.01 (28 Feb 14)
Function 'timer(.)' now has a second argument, allowing for pausing and resuming of timing.

0.82.02 (1 Mar 14)
New function 'mainmenu(.)' added to alter / check visibility of main menu items.
Function 'timer(.)' has a form that reports whether or not the timer is currently paused.

0.83.00 (11 Mar 14)
Function 'keyname(.)' added.
Function 'keydown(false)' now returns "null" for no key press (i.e. 0), rather than the old "#0". All existing code (not in version archives) that used the old returned value of "#0" has been corrected.

0.84.00 (16 Mar 14)
Function 'empty(.)' now takes a scalar argument.
The ALLOW directive now can take the word GREEK to include all Greek letters.
You can now assign optional function arguments to constants, whether system constants or those defined by the CONSTANT declaration; but no expressions are allowed (yet).

(0.84.01 -- no such version - numbering accidentally jumped over this one.)

0.84.02 (1 Apr 14)
Function 'solveexp' added.

0.84.03 (5 Apr 14)
Function 'solveexp' added.

0.84.04 (10 April 14)
Adding further to the change for 0.84.00: Now optional function arguments may be simple expressions involving constants and/or literal numbers.

0.84.05 (13 April 14)
Function 'plot' now takes a single argument which must be an array.
Error detected in the loading and saving with mode 'A'; 'save' used an old maximum no. dimensions (5), 'load' expected the current maximum (3) and crashed if not so. The correction is that 'load' no longer cares how many dimensions were saved; it would ignore any dimensions above the current 3, but to the best of my knowledge no file was ever saved by me with more than 3 dimensions in the days when 5 were possible.
Menu item "Edit | Conform indents" added.

0.85.00 (20 April 14)
Function 'upsample' will no longer take an input array of less than 3 elements (as length 2 caused a crash with the cubic spline method).
The error-handling method "F.Oops" was made more bulletproof, as it was found to crash the MonoMaths instance if references in the error message like "{1}" were not matched by data in the supplied "params object[]" argument.

0.85.01 (17 May 14)
Function 'ladder' now has a four-argument version, in which one specifies the step rather than the output array size.
Function 'polate' added. [As of version 0.88.00 it ceased to exist as a separate function, and instead became a variant of 'interpolate'.]

0.86.00 (18 May 14)
Function 'jagged' has been removed, being redundant. In its place has been added new function 'jagger', which enables much easier building of a jagged matrix from nothing in a loop.
Function 'jag' has been marked as deprecated, soon to disappear, in help files.
Function 'lists_add' has been removed as it was never used, and it is almost inconceivable that it ever would be used.
Function 'placement' added as a more useful equivalent of 'place', which is being deprecated along with 'places' (not significantly useful); eventually they will be removed.
The 'divide by 0' error message has been removed from RunAssignment(.). Now if you do "a = 1/0", no error is raised, and 'a' is set to 'Infinity'.

0.87.00 (25 May 14)
The single alias function 'func(.)' has been replaced by two alias functions, 'func1(.)' and 'func2(.)'. As a result, 'setfunc(.)' now has an extra argument.
Added function 'plotmx'.
The menu items "Search | Colour match of " (braces or brackets) now invoke the colouring to continue as you edit the existing text, until you get sick of it and press ESC.
F.Plot_Colour(.), which is used by all functions 'plot..', was rewritten; the only difference that may affect older code is that scalar values and values in nonchars. list arrays are now taken as indexes of 'palette(.)', and a row vector of length 3 as an RGB set. This would result in different curve colours in such cases, which would hardly be a tragedy for any such programs.
Function merge(.) rewritten. I don't think any preexisting code will be affected; i.e. it is backwards compatible, including with the version rewritten at 
version 0.80.00.
Function rotate(.) completely rewritten. All previous code would work as expected, EXCEPT that if NoTimes is set to 0 now no rotation occurs (it used to default back to +1). New capabilities: (a) matrix row and column rotation is incorporated; (b) for arrays there is no longer any requirement that arguments be named variables, except in the case of all-scalar arguments.
Functions rotaterow(.) and rotatecol(.) added.
Facility to colour square brackets added to menu Search.

0.87.01 (10 June 14)
Function sign(.) extended to take up to 5 arguments instead of up to 2 arguments.
Function pad(.) now takes an 'empty' array and fills it with PadValue (as long as set length is greater than 1).
Function select(.) given an additional second form; no interference with existing usage (as the first form remains unchanged).

0.87.02 (17 June 14)
Namechange: function 'centre' has been renamed 'mxcentre', which is much more accurate and also frees up the name 'centre' for a user's variable name. As it has almost never been used, and I can't find any instances with a text-search program, I don't think any past code is affected.
Functions 'rowof', 'colof', 'rowcolof' and 'address' all removed. In this place were added functions 'offset' and 'indexed' to translate between offset (absolute) addresses and indexed addresses. Also the new functions can handle hypothetical structures of any number of dimensions.
Namechange: function 'findmx' --> 'findinmx'.

0.88.00 (23 June 14)
A 'switch / case' facility added, with the name 'sift', chosen as it is short, roughly describes the action (no worse than 'switch' or 'case'), contains the letters 'if' (as it is a sort of glorified 'if' facility), and as the facility works differently to (and much better than) C or C# switch / case facilities.
Function 'interpolate' revamped to be faster and to deal with more than three reference points. Also, function 'polate' (created in version 0.85.01) was removed, and its code cast as a second variant of function 'interpolate'.
Functions 'pushup' and 'pushdown' operate nearly as before, but are no longer void; they now return the displaced data. (The difference in operation: if the data to be added exceeds the stack size it is amputated at the end, and what is left replaces the entire stack; in this scenario, the two functions have the same effect.) 
Function 'placement' rewritten; now is of similar form to 'interpolate' version 1, and the two can be used together for restoring data from archived curves.
Function 'killgraph' has been eliminated and replaced by 'killgraphs'. Sadly this will affect several older programs - will try to correct all the significant ones. (It would have made too awkward a function to twist 'killgraph' to be able to handle multiple graphs along with various options).
Function 'join' added.
Function 'trunc' renamed 'truncate', otherwise unaltered.
Function 'lop' added.

0.88.01 (7 July 14)
Function 'exec' has an additional second form of deployment of arguments, so you can enter exactly what you want to go onto the command line as is.
A third quote mark has been added, "`", mainly for 'exec' argument (second form), as this argument may require both types of existing quote marks within it.
Function 'keyed' added to detect key combinations.
Function 'jagger', for mode 'O', can now have a specified row no. beyond the end of the jagged matrix, interposing blank intermediate rows if necessary.

0.89.00 (17 July 14)
Function 'join' - if the delimiter argument is an array, now the full contents of that array becomes the delimiter.

0.89.01 (20 July 14)
Function 'placement' given a third argument, to cut down on search time in long arrays where you know the lowest possible index that can return.
Function 'progressive' has gone (never used); in its place came function 'differences'. [*** A mistake! Reinstated in 0.92.00.]

0.90.00 (31 July 14)
Function 'setbox' added to size and position dialog boxes; in the process the old way of sizing a 'show' box via its own arguments has been eradicated.
Histogram plotting greatly changed. Functions 'histogram', 'bargraph' and 'plotbars' are all gone; in their place are 'setbins' and 'plotbins'.

0.90.01 (7 Aug 14)
Function 'captured()' now takes arguments, and returns the name of the program from which the captured variable was saved.
Functions 'rotaterow' and 'rotatecol' given arguments to define a subrange within the row / column for rotation.
Function 'show' now always returns a 'chars' array. If nothing was selected, the array [32.0] is returned; otherwise the selected text.
Function 'show' - display now editable, if the supplied data starts exactly with "[EDITABLE]".
You can now make a par of program text bold by placing symbol "!" immediately after "//" (no space) - as below.
As a temporary fork, a parallel version, "MonoMathsX", was created in MonoDevelop 5.2.1. This included most of the changes required by the newer version of Cairo in board.cs (i.e. obsolescent methods were replaced).

0.90.02 (21 Aug 14)
Function 'multibox' added as a designer dialog box with four possible widget types in a user-prescribed layout.
Function 'segment' added, in particular as an aid to processing the output of a 'multibox' call. [Name was quickly changed - see 0.90.04.]

0.90.03 (6 Sep 14)
The fork mentioned above is now become the main development line, which will be henceforth be processed only with MonoDevelop 5.3+. Text searches for menu items "Search | Go to Nth occurrence" and "Search | Which occurrence of word" now work differently (and as intuitively expected), depending on whether text is selected or unselected when the menu item is invoked.

0.90.04 (14 Sep 14)
More functions added to handle data in a delimited array: 'getslice' (originally called 'segment' - see 0.90.02), 'setslice'.
Function 'count' added.

0.90.05 (26 Oct 14)
Function 'defluff' added to replace nearly zero values with zero.
Function 'datastrip' added to allow array access via data strip offset address. Created for internal use in 'foreach':
Control loop 'foreach' added.
Function 'count' gets an extra two arguments, allowing for counting within a subarray.
Function 'hex' now takes arrays as well as scalars as the principal argument.
Display of arrays by F1 now allows for chars. arrays to be displayed with or without formatting tags being respected.

0.90.06 (17 Nov 14)
Function 'equal' added as a simple comparison of two arrays to a given length.
Function 'findfirst' added.
Function 'ini_data' added.
Further slice functions added: findslice, insertslice, appendslice, deleteslice, copyslices.

0.90.07 (4 Dec 14)
Function 'unhex8' abolished (was never used), and a second optional arg. added to function 'unhex' (to allow for the old functionality of 'unhex8').
Function 'det' renamed 'determinant'.
Functions 'pushdown' and 'pushup' abolished; replacements are 'push' and 'pop' (incompatible with the previous functions).

0.90.08 (19 Dec 14)
Function 'showarray' added. (It preexisted as 'arraycontent', but was never recorded in the help files. It was rewritten to include temporary arrays.)

0.90.09 (4 Feb 15)
Function 'removeruns' added.
All but two 'slice' functions have been removed (see 0.90.04, where most were added); I have left 2, 'getslice' and 'findslice', which I have now renamed 'getsegmt' and 'findsegmt'.
Added is function 'train(.)', a 'train' being a linear collection of subarrays; there is a header, followed by all the data; no delimiters are involved. The one function 'train' has a suite of subfunctions which handle all sorts of operations involving trains.

0.91.00 (11 Feb 15)
Function 'sigmoid' expanded, and arguments enforced; no preexisting instance of 'sigmoid' would now work.
A second accelerator key was added, with different performance, for using pnemonics: Ctrl-Shift-N.
Behaviour of menu items 'Find' and 'Replace' made more user-friendly by putting the found word higher up in the screen than on the bottom line as before.

0.92.00 (17 Feb 15)
Function 'matrix' rewritten; now needs no data, and rotates through whatever data is supplied. (Old code using the fn. would not be affected.)
Function 'vec' has perished; it was just an alias for function 'rowvec', and served no additional purpose to deserve the alias. (I could not find any usage of it in my program files.)
Function 'matrixop' expanded to allow standard arithmetic operations between a matrix and a list array or vector. Also, argument order changed (I can't find any old programs that used the function, so this should not be a problem).
Extra menu items added: "Search | Mark Text between ... "
Function 'progressive', previously removed, has been reinstated, but only for operations '+' and '*'.
Fixed a problem with graph resizing by border-drag; the top label section was expanding uselessly at the expense of graph space.

0.92.01 (26 Mar 15)
Rewrote the navigation system so that it works properly. Also the Undo/Redo stack has been increased to keep track of up to 50 changes.
Added function 'findlineno'.

0.93.00 (29 Mar 15)
Completely rewrote the handling of command line arguments; programs written for the earlier handling system would certainly fail.
Function 'cmdline' was eliminated, and replaced by 'commandline', the argument of which is handled completely differently.
Function 'selectcols' adjusted to give an output with the same number of rows as the input. (Had been returning the transpose instead.)
Functions 'meshx', 'meshy' and 'meshz' have gone. The new function to replace them all is 'mesh'.

0.93.01 (12 Apr 15)
Function 'finddup' added, to find first duplication within an extent of an array.
Function 'perturb' added, to perturb in Gaussian manner an array of values.
Function 'whole' added. [Name later changed - see 0.94.00]
Function 'sortbykey' can now sort more than one data array. (Format unchanged for a single data array.)

0.93.02 (6 May 15)
Main menu item "Show | List Assigned Variables" added, with hot key.
Code which loads files was changed so that AT LONG LAST MonoMaths can load read-only files (e.g. files on a CD).
Function 'seekno' added.

0.94.00 (9 May 15) *** MAJOR INTERNAL CHANGES!
Change 1: There is a new operation, symbol '#', which concatenates array/scalar to array/scalar; its hierarchical level is above all logic operators but below all arithmetic operators (I created a new hierarchical level for it). You can also use the "#=" shorthand in the same sense as you can use e.g. "+=".
Change 2: Does not affect user-code operation, but has simplified the parsing for system functions which can take unassigned or nonexistent variables as argument (e.g. unpack, __importarray, __importscalar). The test for inappropriate use of unassigned variables in the RHS was taken out of the parser and put into runtime code. See changes (annotated and dated) at about the 11th. line of R.Run(.), and later in RunAssignment (search for the words "operand is an unassigned variable" - the test 'vicuse == 0' there is new; the rewriting in Parser.cs was to stop this test being fired inappropriately by the abovementioned functions.)
-------
Function inject(.) was added. While I was writing it I discovered that the old system - replaced by change 2 above - made its operation impossible; this triggered the above change 2 rewrite. (The only thing that triggered change 1 was boredom, --> feature bloat.)
Function 'whole' (added in 0.93.01) was renamed 'isintegral', to make it clear that it is a testing function, not e.g. a rounding function.

0.94.01 (22 May 15)
Function placeboard(.) given a second version which maintains size of board but allows placement in any of 9 positions. Both versions of the function are now VOID (previously a boolean success indicator was returned).
Function matrixop(.) was improved, with some differences in arguments.
New main menu item "Edit | Block of Text Actions" added.
Function unpack(.) now works if the first argument is any array, named or not.

0.95.00 (14 Jul 15)
Function 'iff' no longer allows an array as its first argument. This awkward construction was never used in non-archived programs, and has been largely replaced by the rewrite of function 'sign' in version 0.87.01.

0.96.00 (11 Aug 15)
Function 'save' for text format hitherto would strip characters unicode 0 to 32 off both ends of text before saving. This is too specific. Now instead the only character stripped from the start and end is \u0000.

0.96.01 (2 Sep 15)
Function 'plot', when plotting texts, now allows you to use a text delimiter other than the standard '|'.
Function 'hotkeysoff' added, to turn off hot key accelerators of the  graph menu.

0.97.00 (11 Sep 15)
After spending a long time tracking an obscure crashing error, I discovered that I had a function which under certain circumstances returned a REF argument. The parser has been rewritten to pick this error up in most cases, though a hacker could overcome the test by e.g. enclosing the argument in brackets.
The handling of multiple in-line equals signs has changed. "a = b = X" now translates to "b = X; a = b;", rather than the old "a = X; b = X;". To find the section, go to Parser.cs, search for "MULTIPLE ASSIGNMENTS".
Functions 'appendrows' and 'appendcols' have been internally rewritten, and the arguments work a bit differently. Old code should hopefully not be affected, as this is extension of rather than replacement of earlier function.
Function 'setsegmt' has been added.
New hot-keyed menu item (use hot key only), "Search | Remove all of one bookmark" - e.g. all instances of "/*2*/". Useful in my neuroscience model where I have six fixed bookmarks, and the rest are for any old use; I needed to be able to get rid of the nonfixed ones without interfering with the fixed ones.
Functions 'labelx' to 'labelz' now can be used with just the graph ID, in which case they return whatever label is already there.
A fault in gxclick(G1) was fixed. Previously, if graph G2's menu was clicked, a call gxclick(G1) would reset things internally so that a subsequent call gxclick(G2) would return a no-click, even though G2's menu was the last menu clicked.

0.98.00 (29 Oct 15 - 6 Dec 15)
The C-like shorthand version of the 'if' statement (using symbols '?' and ':') has been included, with an extension for use with three possible outcomes. Function 'iff(.)' has consequently been removed, and all extant code adjusted for this removal. (Its failure was that it always evaluated all outcomes, whatever the condition. It also had no feature not present in the new syntax.)
A small adjustment was made to fn. boardplacemt(.) - 'left' or 'top' returning as 1 pixel was altered to 1.001 (see 'Hints' for why). I did this after being puzzled why a graph in my neuroscience model kept disappearing off the screen when double-clicked (the double-click invoking an updated copy of the graph which used 'placeboards' on the outcome of a prior 'boardplacemt' call).
Function 'cap' added.
Function 'graphtitle' added.

0.98.01 (11 Dec 15 - 20 Jan 16)
Function 'save' has been amended to allow appending for all file types (previously only text files could be appended to). All preexisting code will work just fine.
Function 'falsestep' added. [But quickly replaced in 0.98.02 by function 'monotonicity'.]
Function 'readtable' added.
Function 'tableswap' eliminated (was never used), and function 'consult'; both replaced by 'readtable' with more useful options.
Function 'substitute', 5th. option (which was a table lookup function) was removed, as 'readtable' serves the purpose better.
Default format for display of array content was changed to "G5" (simply involved changing the static variable "OrigStringFmt" early in MainWindows.cs).

0.98.02 (5 Mar 16 - 17 May 16)
Function '__assign' altered so as (a) to recognize the error of giving it an index which itself is an array; and (b) with all errors, to specify in the error message the name of the array being assigned to.
Function 'monotonicity' added.
Function 'divmod' added.
Function 'interpolate' previously had two modes; one of those is now gone, as function 'readtable' does a better job.
Functions 'findrow' and 'findcol' were removed (never used).
May: Graphing problem corrected (a point family in which one of the options was a no-plot point would abort the plotting).

0.98.03 (13 June 16 - 15 June 16)
Function 'solve_de' added.
Syntax "<<a,b>> = data(1, 2)" coded in.
Function 'plot; - can now use scalar 0 for point type, to skip the loop through point plotting, thus saving time with plotting large arrays where points are not to be plotted.

0.98.04 (26 June 16)
Function 'multibox' now allows TextView objects.

0.99.00 (4 July 16 - 9 July 16)
Repair of failure of MonoMaths to detect, in a function with more than one argument, that a variable in any but the first argument is as yet unassigned. (The problem arose on finding that for a predefined array aa, "aa[foo]" returned aa[0], yet "foo" was unmentioned elsewhere.)
Function 'findinmx' rewritten, has different argument structure. So far only works for finds in rows. Impression is that for applying it to columns it would be better to transpose the matrix and use this function, rather than extend this function to apply to columns, as the time taken in searching through columns would not be less.
No code was found in the computer which used 'findinmx'.
Function 'findfirst' renamed as 'findany'; no other changes.
Improvements to display for menu item "Show | List Assigned Variables".

0.99.01 (21 July 16 - 1 August 16)
Conditional statements between arrays has been extended to include ">" and "<", outcome decided on the basis of ascending dictionary order.
Function "load" can now be made to return a scalar error code to the LHS scalar variable, by a 4th argument for mode "Load('F', ...)".
Repair of a promise in the 'Help' introduction: that if you simply enter e.g. "sqrt(2)" and press GO you will get the answer displayed.
Repair of a bug that crashed if an attempt was made to list all variable contents, but some array was unassigned (which currently happens when a REF argument is passed to a function; calling "Show | List..." while paused in the function brought this to light).

0.99.02 (8 Oct 16 - 9 Oct 16)
Function 'sign' altered to allow for not replacing one or more categories of array values; e.g. copy, don't replace, all positives. All previous code using the function should work normally.
Functions gridx, gridy, gridz no longer always reset the graph's internal memory of the original scaling. They will do so still, unless there is a fourth argument TRUE. (Function grid continues to always reset the graph's original memory; it has no such extra argument.)
Functions grid, gridx etc. no longer have an error return, as none is possible; they always return the 3, 6 or 9 input scale settings.

0.99.03 (19 Oct 16 - 7 Dec 16)
Function 'window', write mode, with 'where' set to "cursor", now overwrites any preexisting selection. This involved rewriting MainWindow.WriteWindow(.), as it did not previously eliminate the selected text before inserting new text.
Function 'plot3d' was modified so that it will plot a single point, using scalar args. for coordinates. This has long been possible with 2D function 'plot'.

0..99.04 (9 Dec 16 - 20 Dec 16)
Command line - a new variant has been added, so that MonoMaths will automatically load a text which is named after the program name: "mono .../MonoMaths.exe  ..../Foo.tt". This allows for various programs which have an editor interface "<program name> %f", where "%f" represents the file name that you have clicked in some display. In this case, the new instance of MonoMaths will be a large one, with a minimal Results Window.
Function 'window' has an extra optional argument, which will cause the replacing text to remain selected, if a 'write' operation has occurred.

1.00.00 (10 Jan 17)
Functions 'maxabs...' and 'minabs...' have been rewritten, after a glitch was found in one. Now, 'maxabs' and 'minabs' return the absolute value of the max or min, not the signed value as before. To compensate, 'maxabsat' and 'minabsat' each have a new 4th. element which is the signed value of that max or min (the first element being the absolute value).

1.01.00 (2 Feb 17)
Function 'filesize' now ignores quote marks, if they enclose the whole of the name.

1.01.01 (14 Feb 17 - 6 Mar 17)
New function added, "express", which allows the suppression of the automatic display of scalar variable values at the end of the run. Written in such a way as to allow various other options later (e.g. show arrays, structured or not, at the end of the run).
New functions "swaprows" and "swapcols" added.
New functions "addtorows" and "addtocols" added.
New menu item "Edit | Change Letter Case" added.
Error in system fn "sortbykey" fixed; it was apparent if there were two or more arrays to be sorted using the key array; the sorted key array then got rearranged, so ended up out of sorting order.

1.01.02 (12 Mar 17 - 17 Mar 17)
Facility for placing and manipulating images on graphs has been added, using the new function "graphimage".
Function "plotbins" now has an extra optional field, to assign a base line Y coordinate for bars.

1.01.03 (17 Mar 17 - 18 Mar 17)
No outwardly visible changes, but the layout of system functions has been simplified, with the addition of a new file "SysFns3.cs". Probably a bit faster now. This required changing the internal numbering of several system functions.

1.01.04 (31 Mar 17 - 8 Apr 17)
The 'for' loop parser, was found to be unnecessarily raising an error for an unbraced following assignment in certain circumstances. This led on to quite a rewrite of the way text is broken up into assignments, and then the way that unbraced statements after 'if', 'for', 'while' etc. are handled. No existing code should behave any differently as a result.

1.02.00 (9 Apr 17 - 22 Apr 17)
Function 'equal(.)' was rewritten to be more generally useful. (Done in Riga airport, where I missed my plane as a result.)
Slight alteration to code in runner.cs (method V.MakeCopy(.)) to stop "Array1 = Array1" crashing MonoMaths. Now simply no data is copied across the '=' sign (since the data is already there), so the assignment is useless but harmless.
Function 'plot' was adjusted such that you no longer need to supply 'point weight' and 'line weight' arguments if you just want to rotate through the elements of a point or line characteristic array (e.g. "red|green" for point colour).

1.03.00 (28 Apr 17)
Specific error message now produced if you try to run a function which has only optional arguments; previously it produced a later error which was much less helpful. (I was on the verge of correcting MonoMaths to allow for this situation when I realized that it would be bloody stupid, as a function with no args. - like "Foo()" - still passes a single argument 0, so there is no situation where a first optional argument could ever take its default value.)

1.03.01 (10 May 17)
Function 'reflect' added (to reflect curves in vertical and / or horizontal mirrors).

1.04.00 (15 May 17 - 6 Jun 17)
Function plot(.) changed. You can no longer change the text delimiter from '|' to something else, but you can 'escape' a literal '|' using the backslash. Also an angle indicator has been added, to allow for sloping text on the graph. (The angle indicator can also be backslashed.)  Sadly you cannot add further texts (after further delimiters) following a text that has been angled; further texts are simply not printed. I have tried but haven't find a workaround for this. (If you want to fiddle with this, look in method 'Spot' of class 'Plot'.) 
Function "expunge_range" added.
Amended functions 'gridx' etc to allow just two args., the second arg. being an array with accumulated values, as has always been the case with 'grid'. 
Function "getsegmt" now has an optional final argument to allow for trimming.
Function "str" now allows for the integer format string "Di" (i a numeral); MonoMaths converts arg. to integer(s) before sending to C# to format.
Function "getsegmt" now has an optional fifth arg.: what to return if the segment is empty.

1.05.00 (10 Jun 17 - 30 Jun 17)
The function name "last" has been hijacked for a separate use: "aa[last-1] - ..." is now equivalent to "aa[(size(aa) - 1] = ...", and in fact is internally converted to this. However if you use brackets - "aa[last(aa)-1] = ..." then "last" reverts to being a system function name, and the result is different.
In the process I uncovered, and fixed, a fault; "aa[sin] = ..." would not raise an error, but would replace 'sin' with 0.
Function "join" had its arguments and operation rationalized. Could affect rare bits of past code.
The CONSTANT directive's handling code now allows for multiple consecutive paragraphs starting with this word (as has always been the case for the ALLOW directive).
Function "readtable" acquired an extra argument: what to return if mismatch where exact input lookup values required.
Function "bracketlevel" was removed. It recently proved faulty, and its work can be done with the much simpler and trustworthy function findbrackets(.).
The Ctrl-D display of system function code had not been adjusted for the system function files breakup described for version 1.01.03, so that some system functions could not be displayed. This was fixed.
Function 'setalias' is no longer void, but now returns the number of variables that were aliassed ( = the no. of args).
Menu item "Show|List Assigned Variables" now shows constants also, in green (omitting internal constants like "__L1").
REF arguments may no longer be optional arguments.
Fixed the problem where keying F1 against a constant would not show its value (or anything), if checking from within a user function that was paused or aborted.

1.06.00 (19 Jul 17)
Fixed a memory-wasting problem that must have existed unnoticed for years, where failure to assign the return from an array function resulted in a storeroom permanently assigned to the 'temporary' array returned by the function. The persistent temporary storeroom also persisted if sys. fn. 'unpack' used as its array source a user function; this required a separate (and much easier) fix. It is possible that one or two system functions might need adjusting in the future; I shall look out for further mysteriously persistent temporary array storerooms.

1.06.01 (21 Jul 17 - 24 Jul 17)
It is now possible to print Pango's special characters as literals, like '&'. Applies to function 'label(.)' and to labels in dialog boxes. You do it by enclosing such chars. or substrings between '«' and '»'.
Function 'overlaid' added, which is function 'overlay' rendered as a void function, the 1st. arg. being changed in situ.
Menu option "Show | List Assigned Variables" now allows focus to go to the first occurrence (as a whole word) of whatever is highlighted when the dialog box is closed.

1.06.02 (14 Aug 17)
Function 'monotonicity' now has the option of returning a list of all exception points, instead of a set of statistics. Old code would not be affected.
Text completion algorithm tweaked so as to not offer a choice if all displayed names are the same.

1.07.00 (26 Aug 17 - 29 Aug 17)
Function 'cap' now can cap values to a lower limit as well as an upper limit. Extremely likely that old code would be affected.
Menu item "Show|List assigned variables" now lets you change the value of a scalar if the program has been paused during a run.

1.08.00 (5 Sep 17 - 19 Sep 17)
Function 'inject' renamed to 'enrol' and completely rewritten; sadly, past programs using the instruction will be left stranded.
Function 'cap' extended to allow for only capping part of an array; also, new void function 'capped' added, to change the given array in situ.
Function 'icon' added, to display an icon in the top left corner of the main window.

1.09.00 (16 Dec 17 - 16 Jan 18)
Function 'grid' no longer allows you to omit a graph ID; thus it can no longer set the grid for the next graph to be generated. (A few very old programs would fall over as a result.)
Functions 'lists_clear' and 'lists_clear_to' have been removed, as 'list_clear' can clear any number of lists.
Adjustment made in 'board.cs' (search for "nearly_zero") to stop the occasional graph from labelling what should be zero as e.g. "1.234E-23".

1.10.00 (21 Jan 18)
Function 'placement' now only has two arguments, and has been rewritten in a more direct manner; this was necessary as an error was found in using it on one occasion, and tracking the error through the obfuscated code proved hopeless.

1.10.01 (11 Mar 18 - 21 Mar 18)
Function 'scaleoverx' etc. now has a wildcard which allows for the interntally generated number to be used in the midst of a sequence of overwritings.
New menu item: "Edit | Show contents of "Undo" stack".
Error message corrected; now invalid codes (like the word processor's minus sign "‒") are displayed in the error message, together with the unicode value.
New function 'graphfont' allows setting of font and font size for scale labels and (separately) scale numbering.

1.11.00 (4 Apr 18)
Function 'reflect' rewritten, with some argument differences.

